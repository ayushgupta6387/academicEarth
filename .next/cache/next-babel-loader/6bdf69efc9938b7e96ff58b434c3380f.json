{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"B:\\\\102 head section for seo\\\\client\\\\pages\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/layout';\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showErrorMessage, showSuccessMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { authenticate, isAuth } from '../helpers/auth'; // by searching like http://localhost:3000/login we will get this page or any other page just write name of file\n\nvar Login = function Login() {\n  var _useState = useState({\n    email: 'ayushreactaws@gmail.com',\n    password: 'ayush6387',\n    error: '',\n    success: '',\n    buttonText: 'Login'\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // by writing this useEffect-- if the user is logged in then whenever they try to open signin page it will redirect them to home page\n\n\n  useEffect(function () {\n    isAuth() && Router.push('/');\n  }, []);\n  var email = state.email,\n      password = state.password,\n      error = state.error,\n      success = state.success,\n      buttonText = state.buttonText;\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      // if previous error or success mgsg is showing hide that\n      setState(_objectSpread({}, state, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _defineProperty(_objectSpread2, \"buttonText\", 'Login'), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // to prevent reloading of page\n            e.preventDefault(); // this buttonText is shown when click on register me button\n\n            setState(_objectSpread({}, state, {\n              buttonText: 'Logging in'\n            }));\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(\"http://localhost:8000/api/login\", {\n              email: email,\n              password: password // after writing this we get data on server because in register(in controller we have written req.body)\n\n            }));\n\n          case 5:\n            response = _context.sent;\n            // console.log(response); // data > token/user\n            authenticate(response, function () {\n              return isAuth && isAuth().role === 'admin' ? Router.push('/admin') : Router.push('/user');\n            }); // when user successfully login redirect them to admin or user page\n\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n            setState(_objectSpread({}, state, {\n              buttonText: 'Login',\n              error: _context.t0.response.data.error\n            }));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 9]]);\n  };\n\n  var LoginForm = function LoginForm() {\n    return __jsx(\"form\", {\n      className: true,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"label1\",\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"E-mail\"), __jsx(\"input\", {\n      type: \"email\",\n      onChange: handleChange('email'),\n      value: email,\n      className: \"input form-control\",\n      placeholder: \"Type Your Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"label1\",\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Password\"), __jsx(\"input\", {\n      type: \"password\",\n      onChange: handleChange('password'),\n      value: password,\n      className: \"input form-control\",\n      placeholder: \"Type Your Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"formbtn btn btn-outline-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-5 register-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"/images/r1.jpg\",\n    alt: \"imageHere\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"You only have to know one thing:\"), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"You can learn Anything!\"), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Academic Earth\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"E-learning Platform\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"About\")), __jsx(\"div\", {\n    className: \"full col-md-7 register-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Login Here\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), LoginForm(), __jsx(Link, {\n    href: \"/auth/password/forgot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Forgot Password\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["B:/102 head section for seo/client/pages/login.js"],"names":["Layout","useState","useEffect","Link","Router","axios","showErrorMessage","showSuccessMessage","API","authenticate","isAuth","Login","email","password","error","success","buttonText","state","setState","push","handleChange","name","e","target","value","handleSubmit","preventDefault","post","response","role","console","log","data","LoginForm"],"mappings":"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","sourcesContent":["import Layout from '../components/layout';\nimport {useState, useEffect} from 'react';\nimport Link from 'next/link'\nimport Router from 'next/router'\nimport axios from 'axios';\nimport { showErrorMessage, showSuccessMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport {authenticate, isAuth} from '../helpers/auth'\n\n// by searching like http://localhost:3000/login we will get this page or any other page just write name of file\nconst Login = () => {\n\n    const [state, setState] = useState({\n        email: 'ayushreactaws@gmail.com',\n        password: 'ayush6387',\n        error: '',\n        success: '',\n        buttonText: 'Login'\n    })\n\n// by writing this useEffect-- if the user is logged in then whenever they try to open signin page it will redirect them to home page\nuseEffect(() => {\n    isAuth() && Router.push('/');\n}, []);\n\nconst {email, password, error, success, buttonText} = state;\n    \nconst handleChange = name => e =>{\n    // if previous error or success mgsg is showing hide that\n    setState({...state, [name]: e.target.value, error: '', success: '', buttonText: 'Login'})\n};\nconst handleSubmit = async e => {\n\n    // to prevent reloading of page\n    e.preventDefault();\n\n    // this buttonText is shown when click on register me button\n    setState({...state, buttonText: 'Logging in'})\n    try{\n        // console.table(name, email, password);\n        // passing data to below end point(in backend) with respective data (making a post request with axios)\n        // sending data from client side to backend\n        // http://localhost:8000/api replaced by ${API} not working\n        const response = await axios.post(`http://localhost:8000/api/login`, {\n             email, \n             password\n            // after writing this we get data on server because in register(in controller we have written req.body)\n        });\n        // console.log(response); // data > token/user\n        authenticate(response, () => isAuth && isAuth().role === 'admin' ? Router.push('/admin') : Router.push('/user'));\n            // when user successfully login redirect them to admin or user page\n            \n    }\n        catch (error){\n                console.log(error);\n                setState({...state, buttonText: 'Login', error: error.response.data.error});\n            }\n    }\n\n\nconst LoginForm = () =>\n<form className onSubmit={handleSubmit}>\n<div className=\"form-group\">\n    <label className=\"label1\" htmlFor=\"\">E-mail</label>\n    <input type=\"email\" onChange={handleChange('email')} value={email} className=\"input form-control\" placeholder=\"Type Your Email\" required />\n</div>\n<div className=\"form-group\">\n    <label className=\"label1\" htmlFor=\"\">Password</label>\n    <input type=\"password\" onChange={handleChange('password')} value={password} className=\"input form-control\" placeholder=\"Type Your Password\" required />\n</div>\n<div className=\"form-group\">\n    <button className=\"formbtn btn btn-outline-warning\">{buttonText}</button>\n</div>\n</form>\n\nreturn(\n     <Layout>\n<div className=\"container\">\n    <div className=\"row\">\n    <div className=\"col-md-5 register-left\">\n            <img src={\"/images/r1.jpg\"} alt=\"imageHere\" />\n            <h5>You only have to know one thing:</h5>\n            <h3>You can learn Anything!</h3>\n            <h1>Academic Earth</h1>\n            <p>E-learning Platform</p>\n            <button type=\"button\" className=\"btn btn-primary\">About</button>\n            </div>\n        <div className=\"full col-md-7 register-right\">\n            <h1>Login Here</h1>\n            {/* {JSON.stringify(isAuth())}  by writing this we get all the details on login page of logged in user(id, name, role...)*/}\n            <br />\n            {success && showSuccessMessage(success)}\n            {error && showErrorMessage(error)}\n            {LoginForm()}\n            <Link href=\"/auth/password/forgot\">\n                <a className=\"text-danger\">Forgot Password</a>\n            </Link>\n           \n        </div>\n        </div>\n        </div>\n    </Layout>\n);\n};\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}