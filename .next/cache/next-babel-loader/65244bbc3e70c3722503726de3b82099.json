{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"B:\\\\102 head section for seo\\\\client\\\\pages\\\\register.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/layout'; // import eyes from '../public/images/r1.jpg';\n\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showErrorMessage, showSuccessMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { isAuth } from '../helpers/auth';\n\nvar Register = function Register() {\n  // using hooks\n  // array destructuring\n  var _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    // if two user try to register with same email then we will give error\n    error: '',\n    // after registering we will give success msg\n    success: '',\n    // we will change dynamically button text\n    buttonText: 'Register Me'\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // by writing this useEffect-- if the user is logged in then whenever they try to open signin page it will redirect them to home page\n\n\n  useEffect(function () {\n    isAuth() && Router.push('/');\n  }, []); // now we use directly like buttonText in form where buttn created\n\n  var name = state.name,\n      email = state.email,\n      password = state.password,\n      error = state.error,\n      success = state.success,\n      buttonText = state.buttonText; // using function inside another function e is an event\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setState(_objectSpread({}, state, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _defineProperty(_objectSpread2, \"buttonText\", 'Register Me'), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // to prevent reloading of page\n            e.preventDefault(); // this buttonText is shown when click on register me button\n\n            setState(_objectSpread({}, state, {\n              buttonText: 'Registering'\n            }));\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(\"http://localhost:8000/api/register\", {\n              name: name,\n              email: email,\n              password: password // after writing this we get data on server because in register(in controller we have written req.body)\n\n            }));\n\n          case 5:\n            response = _context.sent;\n            console.log(response);\n            setState(_objectSpread({}, state, {\n              name: '',\n              email: '',\n              password: '',\n              buttonText: 'Submitted',\n              // message is coming from controllers-->auth.js\n              success: response.data.message\n            }));\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n            setState(_objectSpread({}, state, {\n              buttonText: 'Register',\n              error: _context.t0.response.data.error\n            }));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]]);\n  }; // before applying async and await in handleSubmit\n  // const handleSubmit = e => {\n  //     e.preventDefault();\n  //     setState({ ...state, buttonText: 'Registering' });\n  //     // console.table({ name, email, password });\n  //     axios\n  //         .post(`http://localhost:8000/api/register`, {\n  //             name,\n  //             email,\n  //             password\n  //         })\n  //         .then(response => {\n  //             console.log(response);\n  //             setState({\n  //                 ...state,\n  //                 name: '',\n  //                 email: '',\n  //                 password: '',\n  //                 buttonText: 'Submitted',\n  //                 success: response.data.message\n  //             });\n  //         })\n  //         .catch(error => {\n  //             console.log(error);\n  //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n  //         });\n  // };\n  // downloaded\n  // const handleSubmit = async e => {\n  //     e.preventDefault();\n  //     setState({ ...state, buttonText: 'Registering' });\n  //     try {\n  //         const response = await axios.post(`${API}/register`, {\n  //             name,\n  //             email,\n  //             password\n  //         });\n  //         console.log(response);\n  //         setState({\n  //             ...state,\n  //             name: '',\n  //             email: '',\n  //             password: '',\n  //             buttonText: 'Submitted',\n  //             success: response.data.message\n  //         });\n  //     } catch (error) {\n  //         console.log(error);\n  //         setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n  //     }\n  // };    \n\n\n  var registerForm = function registerForm() {\n    return __jsx(\"form\", {\n      className: true,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"label1\",\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"UserName\"), __jsx(\"input\", {\n      onChange: handleChange('name'),\n      value: name,\n      type: \"text\",\n      className: \"input form-control\",\n      placeholder: \"Type Your name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"label1\",\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"E-mail\"), __jsx(\"input\", {\n      onChange: handleChange('email'),\n      value: email,\n      type: \"email\",\n      className: \"input form-control\",\n      placeholder: \"Type Your email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"label1\",\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Password\"), __jsx(\"input\", {\n      onChange: handleChange('password'),\n      value: password,\n      type: \"password\",\n      className: \"input form-control\",\n      placeholder: \"Type Your password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"formbtn btn btn-outline-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-5 register-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"/images/r1.jpg\",\n    alt: \"imageHere\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Join Us\"), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Academic Earth\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"E-learning Platform\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"About\")), __jsx(\"div\", {\n    className: \"full col-md-7 register-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Register Here\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), registerForm()))));\n};\n\nexport default Register;","map":{"version":3,"sources":["B:/102 head section for seo/client/pages/register.js"],"names":["useState","useEffect","Layout","Router","axios","showErrorMessage","showSuccessMessage","API","isAuth","Register","name","email","password","error","success","buttonText","state","setState","push","handleChange","e","target","value","handleSubmit","preventDefault","post","response","console","log","data","message","registerForm"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,mBAArD;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAEnB;AACA;AAHmB,kBAIOT,QAAQ,CAAC;AAC/BU,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/B;AACAC,IAAAA,KAAK,EAAE,EALwB;AAM/B;AACAC,IAAAA,OAAO,EAAE,EAPsB;AAQ/B;AACAC,IAAAA,UAAU,EAAE;AATmB,GAAD,CAJf;AAAA,MAIZC,KAJY;AAAA,MAILC,QAJK,iBAkBvB;;;AACIhB,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,MAAM,MAAML,MAAM,CAACe,IAAP,CAAY,GAAZ,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT,CAnBmB,CAuBnB;;AAvBmB,MAwBZR,IAxBY,GAwByCM,KAxBzC,CAwBZN,IAxBY;AAAA,MAwBNC,KAxBM,GAwByCK,KAxBzC,CAwBNL,KAxBM;AAAA,MAwBCC,QAxBD,GAwByCI,KAxBzC,CAwBCJ,QAxBD;AAAA,MAwBWC,KAxBX,GAwByCG,KAxBzC,CAwBWH,KAxBX;AAAA,MAwBkBC,OAxBlB,GAwByCE,KAxBzC,CAwBkBF,OAxBlB;AAAA,MAwB2BC,UAxB3B,GAwByCC,KAxBzC,CAwB2BD,UAxB3B,EA0BvB;;AACI,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACT,IAAD;AAAA,WAAU,UAACU,CAAD,EAAO;AAAA;;AAClCH,MAAAA,QAAQ,mBAAKD,KAAL,wDAAaN,IAAb,EAAoBU,CAAC,CAACC,MAAF,CAASC,KAA7B,4CAA2C,EAA3C,8CAAwD,EAAxD,iDAAwE,aAAxE,oBAAR;AACH,KAFoB;AAAA,GAArB;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAMH,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjB;AACAA,YAAAA,CAAC,CAACI,cAAF,GAHiB,CAKjB;;AACAP,YAAAA,QAAQ,mBAAKD,KAAL;AAAYD,cAAAA,UAAU,EAAE;AAAxB,eAAR;AANiB;AAAA;AAAA,6CAYUX,KAAK,CAACqB,IAAN,uCAAiD;AAEpEf,cAAAA,IAAI,EAAJA,IAFoE;AAGnEC,cAAAA,KAAK,EAALA,KAHmE;AAInEC,cAAAA,QAAQ,EAARA,QAJmE,CAKpE;;AALoE,aAAjD,CAZV;;AAAA;AAYPc,YAAAA,QAZO;AAmBbC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAT,YAAAA,QAAQ,mBAEDD,KAFC;AAGJN,cAAAA,IAAI,EAAC,EAHD;AAIJC,cAAAA,KAAK,EAAC,EAJF;AAKJC,cAAAA,QAAQ,EAAC,EALL;AAMJG,cAAAA,UAAU,EAAC,WANP;AAOJ;AACAD,cAAAA,OAAO,EAACY,QAAQ,CAACG,IAAT,CAAcC;AARlB,eAAR;AApBa;AAAA;;AAAA;AAAA;AAAA;AAgCLH,YAAAA,OAAO,CAACC,GAAR;AACAX,YAAAA,QAAQ,mBAAKD,KAAL;AAAYD,cAAAA,UAAU,EAAE,UAAxB;AAAoCF,cAAAA,KAAK,EAAE,YAAMa,QAAN,CAAeG,IAAf,CAAoBhB;AAA/D,eAAR;;AAjCK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB,CAhCmB,CAuEvB;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEJ,MAAMkB,YAAY,GAAG,SAAfA,YAAe;AAAA,WACrB;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,QAAQ,EAAIR,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,OAAO,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,EAKI;AAAO,MAAA,QAAQ,EAAEJ,YAAY,CAAC,MAAD,CAA7B;AAAwC,MAAA,KAAK,EAAET,IAA/C;AAAqD,MAAA,IAAI,EAAC,MAA1D;AAAiE,MAAA,SAAS,EAAC,oBAA3E;AAAgG,MAAA,WAAW,EAAC,gBAA5G;AAA6H,MAAA,QAAQ,MAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFJ,EAUI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,OAAO,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,EAGI;AAAO,MAAA,QAAQ,EAAES,YAAY,CAAC,OAAD,CAA7B;AAAwC,MAAA,KAAK,EAAER,KAA/C;AAAsD,MAAA,IAAI,EAAC,OAA3D;AAAmE,MAAA,SAAS,EAAC,oBAA7E;AAAkG,MAAA,WAAW,EAAC,iBAA9G;AAAgI,MAAA,QAAQ,MAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAVJ,EAgBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,OAAO,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,EAGI;AAAO,MAAA,QAAQ,EAAEQ,YAAY,CAAC,UAAD,CAA7B;AAA2C,MAAA,KAAK,EAAEP,QAAlD;AAA4D,MAAA,IAAI,EAAC,UAAjE;AAA4E,MAAA,SAAS,EAAC,oBAAtF;AAA2G,MAAA,WAAW,EAAC,oBAAvH;AAA4I,MAAA,QAAQ,MAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAhBJ,EAsBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDG,UAArD,CADF,CAtBJ,CADqB;AAAA,GAArB;;AA6BA,SACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAK,IAAA,GAAG,EAAE,gBAAV;AAA4B,IAAA,GAAG,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFR,EAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHR,EAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJR,EAKQ;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALR,CADA,EAQI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAIKD,OAAO,IAAIR,kBAAkB,CAACQ,OAAD,CAJlC,EAKKD,KAAK,IAAIR,gBAAgB,CAACQ,KAAD,CAL9B,EAMKkB,YAAY,EANjB,CARJ,CADA,CADA,CADA;AAuBH,CAjLD;;AAmLA,eAAetB,QAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport Layout from '../components/layout';\n// import eyes from '../public/images/r1.jpg';\nimport Router from 'next/router'\nimport axios from 'axios';\nimport { showErrorMessage, showSuccessMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { isAuth } from '../helpers/auth'\n\nconst Register = () => {\n\n    // using hooks\n    // array destructuring\n    const [state, setState] = useState({\n        name: '',\n        email: '',\n        password: '',\n        // if two user try to register with same email then we will give error\n        error: '',\n        // after registering we will give success msg\n        success: '',\n        // we will change dynamically button text\n        buttonText: 'Register Me'\n\n    });\n\n\n// by writing this useEffect-- if the user is logged in then whenever they try to open signin page it will redirect them to home page\n    useEffect(() => {\n        isAuth() && Router.push('/');\n    }, [])\n\n    // now we use directly like buttonText in form where buttn created\n    const {name, email, password, error, success, buttonText} = state;\n\n// using function inside another function e is an event\n    const handleChange = (name) => (e) => {\n        setState({...state, [name]: e.target.value, error: '', success: '', buttonText: 'Register Me'})\n    };\n\n\n    const handleSubmit = async e => {\n\n        // to prevent reloading of page\n        e.preventDefault();\n    \n        // this buttonText is shown when click on register me button\n        setState({...state, buttonText: 'Registering'})\n        try{\n            // console.table(name, email, password);\n            // passing data to below end point(in backend) with respective data (making a post request with axios)\n            // sending data from client side to backend\n            // http://localhost:8000/api replaced by ${API} not working\n            const response = await axios.post(`http://localhost:8000/api/register`, {\n                \n                name,\n                 email, \n                 password\n                // after writing this we get data on server because in register(in controller we have written req.body)\n            });\n            console.log(response);\n            setState({\n                // after successfull submission all the fields needs to be empty \n                ...state,\n                name:'',\n                email:'',\n                password:'',\n                buttonText:'Submitted',\n                // message is coming from controllers-->auth.js\n                success:response.data.message\n            });\n        }\n            catch (error){\n                    console.log(error);\n                    setState({...state, buttonText: 'Register', error: error.response.data.error});\n                }\n        }\n    \n\n\n// before applying async and await in handleSubmit\n// const handleSubmit = e => {\n    //     e.preventDefault();\n    //     setState({ ...state, buttonText: 'Registering' });\n    //     // console.table({ name, email, password });\n    //     axios\n    //         .post(`http://localhost:8000/api/register`, {\n    //             name,\n    //             email,\n    //             password\n    //         })\n    //         .then(response => {\n    //             console.log(response);\n    //             setState({\n    //                 ...state,\n    //                 name: '',\n    //                 email: '',\n    //                 password: '',\n    //                 buttonText: 'Submitted',\n    //                 success: response.data.message\n    //             });\n    //         })\n    //         .catch(error => {\n    //             console.log(error);\n    //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n    //         });\n    // };\n\n\n// downloaded\n        // const handleSubmit = async e => {\n        //     e.preventDefault();\n        //     setState({ ...state, buttonText: 'Registering' });\n        //     try {\n        //         const response = await axios.post(`${API}/register`, {\n        //             name,\n        //             email,\n        //             password\n        //         });\n        //         console.log(response);\n        //         setState({\n        //             ...state,\n        //             name: '',\n        //             email: '',\n        //             password: '',\n        //             buttonText: 'Submitted',\n        //             success: response.data.message\n        //         });\n        //     } catch (error) {\n        //         console.log(error);\n        //         setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n        //     }\n        // };    \n\n    const registerForm = () => \n    <form className onSubmit = {handleSubmit}>\n\n        <div className=\"form-group\">\n\n        <label className=\"label1\" htmlFor=\"\">UserName</label>\n        {/* by passing param. in ohandlehange func. we will know from where it is coming(from name or email...)  */}\n\n            <input onChange={handleChange('name')}  value={name} type=\"text\" className=\"input form-control\" placeholder=\"Type Your name\" required/>\n        </div>\n\n        <div className=\"form-group\">\n\n        <label className=\"label1\" htmlFor=\"\">E-mail</label>\n            <input onChange={handleChange('email')} value={email} type=\"email\" className=\"input form-control\" placeholder=\"Type Your email\" required/>\n        </div>\n        \n        <div className=\"form-group\">\n\n        <label className=\"label1\" htmlFor=\"\">Password</label>\n            <input onChange={handleChange('password')} value={password} type=\"password\" className=\"input form-control\" placeholder=\"Type Your password\" required/>\n        </div>\n\n        <div className=\"form-group\">\n          <button className=\"formbtn btn btn-outline-warning\">{buttonText}</button>\n        </div>\n\n    </form>\n\n    return ( \n    <Layout>\n    <div className=\"container\">\n    <div className=\"row\">\n    <div className=\"col-md-5 register-left\">\n            <img src={\"/images/r1.jpg\"} alt=\"imageHere\" />\n            <h3>Join Us</h3>\n            <h1>Academic Earth</h1>\n            <p>E-learning Platform</p>\n            <button type=\"button\" className=\"btn btn-primary\">About</button>\n            </div>\n        <div className=\"full col-md-7 register-right\">\n            <h1>Register Here</h1>\n            <br />\n            {/* these below 2 lines to show alerts */}\n            {success && showSuccessMessage(success)}\n            {error && showErrorMessage(error)}\n            {registerForm()}\n        </div>\n        </div>\n        </div>\n    </Layout>\n    );\n};\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}