{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"B:\\\\102 head section for seo\\\\client\\\\pages\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/layout';\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showErrorMessage, showSuccessMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { authenticate, isAuth } from '../helpers/auth'; // by searching like http://localhost:3000/login we will get this page or any other page just write name of file\n\nconst Login = () => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    email: 'ayushreactaws@gmail.com',\n    password: 'ayush6387',\n    error: '',\n    success: '',\n    buttonText: 'Login'\n  }); // by writing this useEffect-- if the user is logged in then whenever they try to open signin page it will redirect them to home page\n\n  useEffect(() => {\n    isAuth() && Router.push('/');\n  }, []);\n  const {\n    email,\n    password,\n    error,\n    success,\n    buttonText\n  } = state;\n\n  const handleChange = name => e => {\n    // if previous error or success mgsg is showing hide that\n    setState(_objectSpread({}, state, {\n      [name]: e.target.value,\n      error: '',\n      success: '',\n      buttonText: 'Login'\n    }));\n  };\n\n  const handleSubmit = async e => {\n    // to prevent reloading of page\n    e.preventDefault(); // this buttonText is shown when click on register me button\n\n    setState(_objectSpread({}, state, {\n      buttonText: 'Logging in'\n    }));\n\n    try {\n      // console.table(name, email, password);\n      // passing data to below end point(in backend) with respective data (making a post request with axios)\n      // sending data from client side to backend\n      // http://localhost:8000/api replaced by ${API} not working\n      const response = await axios.post(`http://localhost:8000/api/login`, {\n        email,\n        password // after writing this we get data on server because in register(in controller we have written req.body)\n\n      }); // console.log(response); // data > token/user\n\n      authenticate(response, () => isAuth && isAuth().role === 'admin' ? Router.push('/admin') : Router.push('/user')); // when user successfully login redirect them to admin or user page\n    } catch (error) {\n      console.log(error);\n      setState(_objectSpread({}, state, {\n        buttonText: 'Login',\n        error: error.response.data.error\n      }));\n    }\n  };\n\n  const LoginForm = () => __jsx(\"form\", {\n    className: true,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"label1\",\n    htmlFor: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"E-mail\"), __jsx(\"input\", {\n    type: \"email\",\n    onChange: handleChange('email'),\n    value: email,\n    className: \"input form-control\",\n    placeholder: \"Type Your Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"label1\",\n    htmlFor: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    onChange: handleChange('password'),\n    value: password,\n    className: \"input form-control\",\n    placeholder: \"Type Your Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"formbtn btn btn-outline-warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-5 register-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"/images/r1.jpg\",\n    alt: \"imageHere\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"You only have to know one thing:\"), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"You can learn Anything!\"), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Academic Earth\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"E-learning Platform\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"About\")), __jsx(\"div\", {\n    className: \"full col-md-7 register-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Login Here\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), LoginForm(), __jsx(Link, {\n    href: \"/auth/password/forgot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Forgot Password\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["B:/102 head section for seo/client/pages/login.js"],"names":["Layout","useState","useEffect","Link","Router","axios","showErrorMessage","showSuccessMessage","API","authenticate","isAuth","Login","state","setState","email","password","error","success","buttonText","push","handleChange","name","e","target","value","handleSubmit","preventDefault","response","post","role","console","log","data","LoginForm"],"mappings":"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","sourcesContent":["import Layout from '../components/layout';\nimport {useState, useEffect} from 'react';\nimport Link from 'next/link'\nimport Router from 'next/router'\nimport axios from 'axios';\nimport { showErrorMessage, showSuccessMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport {authenticate, isAuth} from '../helpers/auth'\n\n// by searching like http://localhost:3000/login we will get this page or any other page just write name of file\nconst Login = () => {\n\n    const [state, setState] = useState({\n        email: 'ayushreactaws@gmail.com',\n        password: 'ayush6387',\n        error: '',\n        success: '',\n        buttonText: 'Login'\n    })\n\n// by writing this useEffect-- if the user is logged in then whenever they try to open signin page it will redirect them to home page\nuseEffect(() => {\n    isAuth() && Router.push('/');\n}, []);\n\nconst {email, password, error, success, buttonText} = state;\n    \nconst handleChange = name => e =>{\n    // if previous error or success mgsg is showing hide that\n    setState({...state, [name]: e.target.value, error: '', success: '', buttonText: 'Login'})\n};\nconst handleSubmit = async e => {\n\n    // to prevent reloading of page\n    e.preventDefault();\n\n    // this buttonText is shown when click on register me button\n    setState({...state, buttonText: 'Logging in'})\n    try{\n        // console.table(name, email, password);\n        // passing data to below end point(in backend) with respective data (making a post request with axios)\n        // sending data from client side to backend\n        // http://localhost:8000/api replaced by ${API} not working\n        const response = await axios.post(`http://localhost:8000/api/login`, {\n             email, \n             password\n            // after writing this we get data on server because in register(in controller we have written req.body)\n        });\n        // console.log(response); // data > token/user\n        authenticate(response, () => isAuth && isAuth().role === 'admin' ? Router.push('/admin') : Router.push('/user'));\n            // when user successfully login redirect them to admin or user page\n            \n    }\n        catch (error){\n                console.log(error);\n                setState({...state, buttonText: 'Login', error: error.response.data.error});\n            }\n    }\n\n\nconst LoginForm = () =>\n<form className onSubmit={handleSubmit}>\n<div className=\"form-group\">\n    <label className=\"label1\" htmlFor=\"\">E-mail</label>\n    <input type=\"email\" onChange={handleChange('email')} value={email} className=\"input form-control\" placeholder=\"Type Your Email\" required />\n</div>\n<div className=\"form-group\">\n    <label className=\"label1\" htmlFor=\"\">Password</label>\n    <input type=\"password\" onChange={handleChange('password')} value={password} className=\"input form-control\" placeholder=\"Type Your Password\" required />\n</div>\n<div className=\"form-group\">\n    <button className=\"formbtn btn btn-outline-warning\">{buttonText}</button>\n</div>\n</form>\n\nreturn(\n     <Layout>\n<div className=\"container\">\n    <div className=\"row\">\n    <div className=\"col-md-5 register-left\">\n            <img src={\"/images/r1.jpg\"} alt=\"imageHere\" />\n            <h5>You only have to know one thing:</h5>\n            <h3>You can learn Anything!</h3>\n            <h1>Academic Earth</h1>\n            <p>E-learning Platform</p>\n            <button type=\"button\" className=\"btn btn-primary\">About</button>\n            </div>\n        <div className=\"full col-md-7 register-right\">\n            <h1>Login Here</h1>\n            {/* {JSON.stringify(isAuth())}  by writing this we get all the details on login page of logged in user(id, name, role...)*/}\n            <br />\n            {success && showSuccessMessage(success)}\n            {error && showErrorMessage(error)}\n            {LoginForm()}\n            <Link href=\"/auth/password/forgot\">\n                <a className=\"text-danger\">Forgot Password</a>\n            </Link>\n           \n        </div>\n        </div>\n        </div>\n    </Layout>\n);\n};\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}