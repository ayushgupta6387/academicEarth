{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"A:\\\\react_Project\\\\pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport Layout from '../components/layout'; // import eyes from '../public/images/r1.jpg';\n\nvar Register = function Register() {\n  _s();\n\n  // using hooks\n  // array destructuring\n  var _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    // if two user try to register with same email then we will give error\n    error: '',\n    // after registering we will give success msg\n    success: '',\n    // we will change dynamically button text\n    buttonText: 'Register Me'\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // now we use directly like buttonText in form where buttn created\n\n\n  var name = state.name,\n      email = state.email,\n      password = state.password,\n      error = state.error,\n      success = state.success,\n      buttonText = state.buttonText; // using function inside another function e is an event\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setState(_objectSpread(_objectSpread({}, state), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _defineProperty(_objectSpread2, \"buttonText\", 'Register Me'), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    // to prevent reloading of page\n    e.preventDefault();\n    console.table(name, email, password);\n  };\n\n  var registerForm = function registerForm() {\n    return __jsx(\"form\", {\n      className: true,\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      className: \"label1\",\n      \"for\": \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"UserName\"), __jsx(\"input\", {\n      onChange: handleChange('name'),\n      value: name,\n      type: \"text\",\n      className: \"input form-control\",\n      placeholder: \"Type Your name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      className: \"label1\",\n      \"for\": \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"E-mail\"), __jsx(\"input\", {\n      onChange: handleChange('email'),\n      value: email,\n      type: \"email\",\n      className: \"input form-control\",\n      placeholder: \"Type Your email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      className: \"label1\",\n      \"for\": \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Password\"), __jsx(\"input\", {\n      onChange: handleChange('password'),\n      value: password,\n      type: \"password\",\n      className: \"input form-control\",\n      placeholder: \"Type Your password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/r1.jpg\",\n    alt: \"hhehuhu\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"full col-md-7\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Register Here\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), registerForm(), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), JSON.stringify(state)))));\n};\n\n_s(Register, \"MJRib/f+F+4eOg9Oduy+w7GvsPY=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["A:/react_Project/pages/register.js"],"names":["useState","Layout","Register","name","email","password","error","success","buttonText","state","setState","handleChange","e","target","value","handleSubmit","preventDefault","console","table","registerForm","JSON","stringify"],"mappings":"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","sourcesContent":["import {useState} from 'react';\r\nimport Layout from '../components/layout';\r\n// import eyes from '../public/images/r1.jpg';\r\n\r\n\r\nconst Register = () => {\r\n\r\n    // using hooks\r\n    // array destructuring\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        // if two user try to register with same email then we will give error\r\n        error: '',\r\n        // after registering we will give success msg\r\n        success: '',\r\n        // we will change dynamically button text\r\n        buttonText: 'Register Me'\r\n\r\n    });\r\n\r\n    // now we use directly like buttonText in form where buttn created\r\n    const {name, email, password, error, success, buttonText} = state;\r\n\r\n// using function inside another function e is an event\r\n    const handleChange = (name) => (e) => {\r\n        setState({...state, [name]: e.target.value, error: '', success: '', buttonText: 'Register Me'})\r\n    };\r\n\r\nconst handleSubmit = e => {\r\n    // to prevent reloading of page\r\n    e.preventDefault();\r\n    console.table(name, email, password);\r\n}\r\n    \r\n\r\n    const registerForm = () => \r\n    <form className onSubmit = {handleSubmit}>\r\n\r\n        <div className=\"form-group\">\r\n\r\n        <label className=\"label1\" for=\"\">UserName</label>\r\n        {/* by passing param. in ohandlehange func. we will know from where it is coming(from name or email...)  */}\r\n\r\n            <input onChange={handleChange('name')}  value={name} type=\"text\" className=\"input form-control\" placeholder=\"Type Your name\"/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n\r\n        <label className=\"label1\" for=\"\">E-mail</label>\r\n            <input onChange={handleChange('email')} value={email} type=\"email\" className=\"input form-control\" placeholder=\"Type Your email\"/>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n\r\n        <label className=\"label1\" for=\"\">Password</label>\r\n            <input onChange={handleChange('password')} value={password} type=\"password\" className=\"input form-control\" placeholder=\"Type Your password\"/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-outline-warning\">{buttonText}</button>\r\n        </div>\r\n    </form>\r\n\r\n    return ( \r\n    <Layout>\r\n    <div className=\"container\">\r\n    <div className=\"row\">\r\n    <div className=\"col-md-5\">\r\n            <img src={\"/images/r1.jpg\"} alt=\"hhehuhu\" />\r\n            </div>\r\n        <div className=\"full col-md-7\">\r\n            <h1>Register Here</h1>\r\n            <br />\r\n            {registerForm()}\r\n            <br />\r\n            {JSON.stringify(state)}\r\n        </div>\r\n        </div>\r\n        </div>\r\n    </Layout>\r\n    );\r\n};\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}